# Generated by Django 2.1.7 on 2019-12-20 12:31

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutCountries',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=50)),
                ('country_code', models.CharField(max_length=2)),
                ('currency', models.CharField(max_length=10)),
                ('pincode_size', models.IntegerField()),
                ('event_advertising', models.CharField(max_length=11)),
                ('event_stall_spaces', models.CharField(max_length=11)),
                ('event_mcp', models.CharField(max_length=11)),
                ('timezone', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_regex1', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_regex2', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'about_countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminAccesses',
            fields=[
                ('access_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('updated_on', models.DateTimeField()),
                ('access_type', models.IntegerField()),
                ('read_access', models.IntegerField()),
                ('write_access', models.IntegerField()),
                ('delete_access', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_accesses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminAccessTypes',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('updated_on', models.DateTimeField()),
                ('parameter', models.CharField(max_length=110)),
                ('details', models.TextField()),
            ],
            options={
                'db_table': 'admin_access_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminActionLog',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('parameter', models.CharField(max_length=150)),
                ('event_id', models.IntegerField()),
                ('action_taken', models.TextField()),
            ],
            options={
                'db_table': 'admin_action_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminEditorialLogs',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('data_type', models.TextField()),
                ('old_data', models.TextField()),
                ('new_data', models.TextField()),
            ],
            options={
                'db_table': 'admin_editorial_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminEventAssignment',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('super_admin_id', models.IntegerField(blank=True, null=True)),
                ('event_id', models.IntegerField()),
                ('assignment_timestamp', models.DateTimeField()),
                ('deadline', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin_event_assignment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminEventConcerns',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('message', models.TextField()),
                ('date_added', models.DateTimeField()),
                ('resolve', models.IntegerField()),
                ('admin_id', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_event_concerns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminPromotionalContents',
            fields=[
                ('content_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('date_added', models.DateTimeField()),
                ('event_id', models.IntegerField()),
                ('contents', models.TextField()),
            ],
            options={
                'db_table': 'admin_promotional_contents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminPromotionPostings',
            fields=[
                ('posting_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('admin_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('group_name', models.CharField(max_length=600)),
                ('group_link', models.CharField(max_length=600)),
                ('status', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'admin_promotion_postings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminsWrongSubmissions',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('link_id', models.CharField(max_length=11)),
                ('submitted_by', models.IntegerField()),
                ('verified_by', models.IntegerField()),
                ('date_added', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admins_wrong_submissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminTaskManagement',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('raised_by', models.IntegerField()),
                ('raised_to', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('priority', models.CharField(max_length=25)),
                ('message', models.TextField()),
                ('status', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'admin_task_management',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('ann_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(default='', max_length=300)),
                ('mail_body', models.CharField(default='', max_length=600)),
                ('dashboard_msg', models.CharField(default='', max_length=600)),
                ('created_on', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 943267))),
                ('updated_on', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 943291))),
                ('status', models.CharField(default='deactive', max_length=30)),
            ],
            options={
                'db_table': 'announcements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnnouncementsAccess',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('announcement_id', models.CharField(default='', max_length=300)),
                ('user_id', models.CharField(default='', max_length=600)),
                ('timestamp', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 943658))),
            ],
            options={
                'db_table': 'announcements_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Articles2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=45)),
                ('event_name', models.CharField(max_length=200)),
                ('md5', models.CharField(max_length=35)),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('profile_image', models.CharField(max_length=350)),
                ('banner', models.CharField(max_length=350)),
                ('editable_image', models.CharField(blank=True, max_length=300, null=True)),
                ('sdate', models.DateTimeField(blank=True, db_column='sDate', null=True)),
                ('edate', models.DateTimeField(blank=True, db_column='eDate', null=True)),
                ('address_line1', models.TextField(blank=True, null=True)),
                ('address_line2', models.TextField(blank=True, null=True)),
                ('pincode', models.CharField(max_length=10)),
                ('state', models.CharField(max_length=30)),
                ('city', models.TextField()),
                ('locality', models.CharField(max_length=50)),
                ('full_address', models.CharField(max_length=350)),
                ('latitude', models.CharField(max_length=150)),
                ('longitude', models.CharField(max_length=150)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('description', models.TextField()),
                ('website', models.CharField(blank=True, max_length=500, null=True)),
                ('fb_page', models.CharField(blank=True, max_length=200, null=True)),
                ('fb_event_page', models.CharField(blank=True, max_length=200, null=True)),
                ('event_hashtag', models.CharField(blank=True, max_length=30, null=True)),
                ('source_name', models.CharField(max_length=30)),
                ('source_url', models.CharField(max_length=350)),
                ('email_id_organizer', models.CharField(max_length=100)),
                ('ticket_url', models.TextField()),
                ('place_id', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'articles2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeAnnouncements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.IntegerField()),
                ('org_id', models.IntegerField()),
                ('msg', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'attendee_announcements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormBuilder',
            fields=[
                ('ques_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ques_title', models.TextField()),
                ('ques_type', models.IntegerField()),
                ('ques_accessibility', models.IntegerField()),
            ],
            options={
                'db_table': 'attendee_form_builder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormOptions',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ques_id', models.IntegerField()),
                ('option_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'attendee_form_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormResponse',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('attendee_id', models.IntegerField()),
                ('ques_id', models.IntegerField()),
                ('booking_id', models.CharField(max_length=20)),
                ('response', models.CharField(max_length=400)),
            ],
            options={
                'db_table': 'attendee_form_response',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'attendee_form_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('bank_name', models.CharField(max_length=20)),
                ('ac_holder_name', models.CharField(max_length=70)),
                ('ac_type', models.CharField(max_length=15)),
                ('ac_number', models.CharField(max_length=26)),
                ('ifsc_code', models.CharField(max_length=14)),
                ('branch', models.CharField(max_length=30)),
                ('gst_number', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'bank_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('blog_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField()),
                ('added_by', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=120)),
                ('blog_img', models.CharField(max_length=300)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'blogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoostEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('city', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'BoostEvent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CampaignStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('campaign_id', models.IntegerField()),
                ('contact', models.CharField(max_length=50)),
                ('contact_type', models.CharField(max_length=20)),
                ('created_on', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 945993))),
                ('updated_on', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 946012))),
                ('status', models.CharField(default='scheduled', max_length=30)),
            ],
            options={
                'db_table': 'campaign_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CampaignTemplates',
            fields=[
                ('template_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('predefined_template_id', models.IntegerField(default=0)),
                ('template_type', models.CharField(max_length=50)),
                ('template_subject', models.CharField(default='', max_length=100)),
                ('template_image', models.CharField(default='', max_length=300)),
                ('template_msg', models.CharField(default='', max_length=160)),
                ('template_link', models.CharField(default='', max_length=4000)),
                ('is_standard', models.IntegerField(default=0)),
                ('status', models.CharField(default='active', max_length=30)),
                ('created_on', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 945563))),
                ('scheduled_on', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 945582))),
            ],
            options={
                'db_table': 'campaign_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=38)),
                ('page_name', models.CharField(max_length=30)),
                ('short_lived', models.IntegerField()),
                ('country', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoriesStalls',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'categories_stalls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategorizedEvents',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
                ('topic_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'categorized_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CitiesList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('city', models.TextField()),
                ('state', models.TextField()),
                ('country', models.TextField()),
                ('major', models.IntegerField()),
            ],
            options={
                'db_table': 'cities_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerSupport',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('complaint_id', models.CharField(max_length=14)),
                ('subject', models.TextField()),
                ('thread_status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'customer_support',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerSupportThreads',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('complaint_id', models.CharField(max_length=12)),
                ('complaint_body', models.TextField()),
                ('complaint_date', models.DateTimeField()),
                ('admin_response', models.TextField()),
                ('admin_response_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer_support_threads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountErcess',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('coupon', models.CharField(max_length=20)),
                ('amount', models.CharField(max_length=10)),
                ('amount_type', models.IntegerField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('explanation', models.TextField()),
            ],
            options={
                'db_table': 'discount_ercess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpBlogdata',
            fields=[
                ('blog_id', models.AutoField(primary_key=True, serialize=False)),
                ('author', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Ercesscorp_blogdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpContactdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=70)),
                ('mobile', models.BigIntegerField()),
                ('purpose', models.CharField(max_length=20)),
                ('comment', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'Ercesscorp_contactdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpRegistrationdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=10)),
                ('location', models.CharField(max_length=30)),
                ('submitted', models.IntegerField()),
                ('how_u_know', models.CharField(max_length=100)),
                ('verify', models.IntegerField()),
            ],
            options={
                'db_table': 'Ercesscorp_registrationdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpUserregistrationtoken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email_token', models.CharField(max_length=250)),
                ('user_email_token_created_on', models.DateTimeField(blank=True, null=True)),
                ('user_password_token', models.CharField(max_length=250)),
                ('user_email', models.CharField(max_length=250)),
                ('user_password_token_created_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Ercesscorp_userregistrationtoken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessIndiaeveStates',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_name', models.CharField(max_length=50)),
                ('state_id', models.IntegerField()),
                ('site_id', models.IntegerField()),
            ],
            options={
                'db_table': 'ercess_indiaeve_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessOffers',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('date_added', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 944676))),
                ('country', models.IntegerField()),
                ('coupon_name', models.CharField(max_length=20)),
                ('price_range_min', models.IntegerField()),
                ('price_range_max', models.IntegerField()),
                ('cashback', models.IntegerField()),
                ('discount_amt', models.IntegerField()),
                ('status', models.CharField(default='active', max_length=30)),
            ],
            options={
                'db_table': 'ercess_offers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessOtherMappings',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=30)),
                ('partner_id', models.IntegerField(blank=True, null=True)),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'ercess_other_mappings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessPartnersCategories',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('ercess_category', models.IntegerField()),
                ('partner_category', models.CharField(blank=True, max_length=50, null=True)),
                ('partner_category_id', models.IntegerField(blank=True, null=True)),
                ('partner_id', models.CharField(db_column='partner_Id', max_length=50)),
                ('date_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'ercess_partners_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessPartnersSubcategories',
            fields=[
                ('subcat_id', models.AutoField(primary_key=True, serialize=False)),
                ('ercess_topic_id', models.IntegerField()),
                ('partner_subcate_name', models.CharField(max_length=40)),
                ('partner_subcate_id', models.IntegerField(blank=True, null=True)),
                ('partner_id', models.IntegerField()),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'ercess_partners_subcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventEditLogs',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('last_updated', models.DateTimeField()),
                ('parameter', models.CharField(max_length=100)),
                ('taken_action', models.CharField(max_length=100)),
                ('old_data', models.TextField()),
                ('new_data', models.TextField()),
                ('role', models.CharField(max_length=100)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'event_edit_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventProcesses',
            fields=[
                ('process_id', models.AutoField(primary_key=True, serialize=False)),
                ('last_updated', models.DateTimeField()),
                ('process_type', models.CharField(max_length=100)),
                ('what_to_process', models.CharField(max_length=100)),
                ('msg_to_org', models.TextField()),
                ('active', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'event_processes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventStatusOnChannel',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('site_id', models.IntegerField()),
                ('admin_id', models.IntegerField()),
                ('link', models.CharField(max_length=300)),
                ('promotion_status', models.CharField(max_length=50)),
                ('partner_status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'event_status_on_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventVerificationResult',
            fields=[
                ('result_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('verified_at', models.DateTimeField()),
                ('verified_against', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'event_verification_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FbEvents',
            fields=[
                ('event_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('country_name', models.TextField(blank=True, null=True)),
                ('event_link', models.TextField(blank=True, null=True)),
                ('heading', models.TextField(blank=True, null=True)),
                ('date', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fb_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FbOrganizers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evid', models.CharField(blank=True, max_length=100, null=True)),
                ('organizer', models.TextField(blank=True, db_column='Organizer', null=True)),
                ('host_link', models.TextField(blank=True, null=True)),
                ('email_id', models.TextField(blank=True, null=True)),
                ('promotion_mail_status', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fb_organizers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinanceSettlement',
            fields=[
                ('finance_table_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_id', models.CharField(max_length=100)),
                ('sale_id', models.IntegerField()),
                ('sold_on', models.CharField(blank=True, max_length=100, null=True)),
                ('event_id', models.IntegerField()),
                ('receive_date', models.DateTimeField(blank=True, null=True)),
                ('receive_ref_num', models.CharField(blank=True, max_length=100, null=True)),
                ('partner_conv_fee', models.CharField(max_length=100)),
                ('partner_tax', models.CharField(max_length=100)),
                ('amount_received', models.CharField(max_length=100)),
                ('ercess_convenience', models.CharField(max_length=100)),
                ('ercess_gst', models.CharField(max_length=100)),
                ('payable_to_organizer', models.CharField(max_length=100)),
                ('process_date', models.DateTimeField(blank=True, null=True)),
                ('accountant_id', models.IntegerField()),
                ('partner_invoice_id', models.CharField(max_length=100)),
                ('ercess_invoice_id', models.IntegerField()),
                ('partner_notes', models.TextField()),
                ('organizer_notes', models.TextField()),
                ('final_settlement', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'finance_settlement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinanceStandardCharges',
            fields=[
                ('charges_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_id', models.IntegerField()),
                ('fee', models.CharField(max_length=11)),
                ('fee_type', models.CharField(max_length=20)),
                ('tax_name', models.CharField(max_length=2000)),
                ('tax_value', models.CharField(max_length=2000)),
                ('service_type', models.CharField(max_length=2000)),
                ('service_details', models.CharField(max_length=2000)),
                ('sms', models.IntegerField()),
                ('email', models.IntegerField()),
            ],
            options={
                'db_table': 'finance_standard_charges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Leads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
                ('email', models.CharField(default='', max_length=60)),
                ('contact', models.CharField(default='', max_length=12)),
                ('city', models.CharField(default='', max_length=30)),
                ('category', models.IntegerField(default='')),
                ('sub_category', models.IntegerField(default='')),
                ('user_id', models.IntegerField(default='')),
                ('date_added', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 942439))),
            ],
            options={
                'db_table': 'leads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageTemplates',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('used_for', models.CharField(max_length=30)),
                ('explanation', models.TextField()),
                ('subject', models.TextField()),
                ('body', models.TextField()),
            ],
            options={
                'db_table': 'message_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizerAssets',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('organizer_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('file', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'organizer_assets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageSales',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(default=0)),
                ('purchase_date', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 942800))),
                ('booking_id', models.CharField(default='', max_length=50)),
                ('price_paid', models.CharField(default='', max_length=11)),
                ('package_bought', models.IntegerField(default=0)),
                ('invoice_number', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'package_sales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerCurrencies',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=30)),
                ('date_added', models.DateTimeField()),
                ('partner_id', models.IntegerField()),
                ('currency_name', models.CharField(max_length=30)),
                ('currency_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_currencies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerSites',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('site_name', models.CharField(max_length=150)),
                ('site_url', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(max_length=50)),
                ('website', models.IntegerField()),
                ('app', models.IntegerField()),
                ('site_use', models.CharField(max_length=250)),
                ('coverage', models.CharField(max_length=250)),
                ('method', models.CharField(max_length=20)),
                ('doc_name', models.CharField(max_length=50)),
                ('email1', models.CharField(max_length=60)),
                ('email2', models.CharField(max_length=60)),
                ('cc', models.CharField(max_length=60)),
                ('restriction', models.CharField(max_length=500)),
                ('support_name', models.CharField(max_length=60)),
                ('support_email', models.CharField(max_length=60)),
                ('support_mobile', models.CharField(max_length=40)),
                ('payment_policy', models.CharField(max_length=250)),
                ('payment_within_days', models.IntegerField()),
                ('merchant_name', models.CharField(max_length=200)),
                ('official_convenience_fee', models.CharField(max_length=20)),
                ('official_transaction_fee', models.CharField(max_length=20)),
                ('official_flat_charges', models.CharField(max_length=20)),
                ('official_tax_charges', models.CharField(max_length=3)),
                ('negotiated_convenience_fee', models.CharField(max_length=20)),
                ('negotiated_transaction_fee', models.CharField(max_length=20)),
                ('negotiated_flat_charges', models.CharField(max_length=20)),
                ('negotiated_tax_charges', models.CharField(max_length=3)),
                ('convenience_fee_organizer', models.CharField(max_length=11)),
                ('transaction_fee_organizer', models.CharField(max_length=11)),
                ('flat_fee_organizer', models.CharField(max_length=11)),
                ('tax_fee_organizer', models.CharField(max_length=11)),
                ('additional_msg', models.CharField(max_length=1000)),
                ('active_state', models.IntegerField()),
            ],
            options={
                'db_table': 'partner_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerTimezones',
            fields=[
                ('timezone_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=40)),
                ('last_updated', models.DateTimeField()),
                ('partner_id', models.IntegerField()),
                ('timezone', models.CharField(max_length=50)),
                ('partner_zone_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_timezones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_reset_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentSettlement',
            fields=[
                ('settlement_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 936269))),
                ('date_modified', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 936297))),
                ('booking_id', models.CharField(default='', max_length=50)),
                ('ticket_sale_id', models.CharField(default='', max_length=50)),
                ('added_by', models.CharField(default='', max_length=11)),
                ('modified_by', models.CharField(default='', max_length=11)),
                ('receival_status', models.CharField(default='pending', max_length=50)),
                ('expected_amnt_partner', models.CharField(default='', max_length=11)),
                ('rcvd_amnt_partner', models.CharField(default='', max_length=11)),
                ('receival_date', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 936418))),
                ('receival_invoice', models.CharField(default='', max_length=300)),
                ('partner_dispute', models.TextField(default='')),
                ('process_status', models.CharField(default='pending', max_length=50)),
                ('amount_processed', models.CharField(default='', max_length=11)),
                ('amount_process_date', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 936487))),
                ('process_invoice', models.CharField(default='', max_length=300)),
                ('organizer_dispute', models.TextField(default='')),
            ],
            options={
                'db_table': 'payment_settlement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferrerCashbackInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.CharField(default='', max_length=20)),
                ('payment_platform', models.CharField(default='', max_length=50)),
                ('email_id', models.CharField(default='', max_length=100)),
                ('referrer_code', models.CharField(max_length=30)),
                ('ticket_sales_id', models.IntegerField(default=0)),
                ('payable_amount', models.IntegerField(default=0)),
                ('payment_status', models.CharField(default='', max_length=20)),
                ('payment_date', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 944040))),
            ],
            options={
                'db_table': 'referrer_cashback_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferrerCashbackTokens',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('token_code', models.CharField(max_length=100)),
                ('attendee_email_id', models.CharField(default='', max_length=100)),
                ('ticket_sales_id', models.IntegerField()),
            ],
            options={
                'db_table': 'referrer_cashback_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rsvp',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 936989))),
                ('event_id', models.IntegerField(default=0)),
                ('locked', models.IntegerField(default=0)),
                ('supplied_by', models.CharField(default='', max_length=30)),
                ('attendee_name', models.CharField(default='', max_length=30)),
                ('attendee_email', models.CharField(default='', max_length=80)),
                ('attendee_contact', models.CharField(default='', max_length=12)),
                ('message', models.CharField(default='', max_length=250)),
            ],
            options={
                'db_table': 'rsvp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShortUrlTracker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('short_url', models.CharField(max_length=20)),
                ('original_url', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'short_url_tracker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StallAudience',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('audience_type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'stall_audience',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StallsAudience',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('stall_id', models.IntegerField()),
                ('audience', models.IntegerField()),
            ],
            options={
                'db_table': 'stalls_audience',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StallsProducts',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('stall_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
            ],
            options={
                'db_table': 'stalls_products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketAttendees',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('order_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=40)),
                ('contact', models.CharField(max_length=10)),
                ('email', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ticket_attendees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketDiscounts',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('coupon', models.CharField(max_length=20)),
                ('discount_amt', models.CharField(max_length=6)),
                ('discount_type', models.IntegerField()),
                ('discount_start', models.DateTimeField()),
                ('discount_end', models.DateTimeField(blank=True, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'ticket_discounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketOrdersErcess',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_id', models.CharField(max_length=40)),
                ('txn_id', models.CharField(max_length=40)),
                ('paid', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('total_amount', models.CharField(max_length=10)),
                ('user_id', models.IntegerField()),
                ('billing_name', models.CharField(max_length=50)),
                ('billing_email', models.CharField(max_length=50)),
                ('billing_phone', models.CharField(max_length=11)),
                ('purchase_timestamp', models.DateTimeField()),
                ('affiliate', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ticket_orders_ercess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('tickets_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_name', models.CharField(max_length=100)),
                ('ticket_price', models.CharField(max_length=8)),
                ('other_charges', models.CharField(blank=True, max_length=6, null=True)),
                ('other_charges_type', models.IntegerField(blank=True, null=True)),
                ('ticket_qty', models.IntegerField()),
                ('min_qty', models.IntegerField()),
                ('max_qty', models.IntegerField()),
                ('qty_left', models.IntegerField()),
                ('ticket_msg', models.CharField(blank=True, max_length=200, null=True)),
                ('ticket_start_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField()),
                ('ercess_fee', models.IntegerField()),
                ('transaction_fee', models.IntegerField()),
                ('ticket_label', models.CharField(max_length=20)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketsSale',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField(default=0)),
                ('ticket_id', models.IntegerField(default=0)),
                ('booking_id', models.CharField(default='', max_length=30)),
                ('oragnizer', models.IntegerField(default=0)),
                ('ticket_type', models.CharField(default='', max_length=100)),
                ('purchase_date', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 939932))),
                ('ampunt_paid', models.FloatField(default=0)),
                ('qty', models.IntegerField(default=1)),
                ('attendee_name', models.CharField(default='', max_length=30)),
                ('attendee_contact', models.CharField(default='', max_length=12)),
                ('attendee_email', models.CharField(default='', max_length=45)),
                ('seller_site', models.CharField(default='', max_length=25)),
                ('ticket_handover', models.CharField(default='', max_length=30)),
            ],
            options={
                'db_table': 'tickets_sale',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketsSaleErcess',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_id', models.CharField(default='', max_length=40)),
                ('event_id', models.IntegerField(default=0)),
                ('ticket_id', models.IntegerField(default=0)),
                ('cart_timestamp', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 940437))),
                ('qty', models.IntegerField(default=0)),
                ('applied_coupon', models.CharField(max_length=10)),
                ('coupon', models.CharField(default='', max_length=10)),
                ('tickets_amount', models.FloatField(default=0)),
                ('discounted_amount', models.CharField(default='0', max_length=10)),
                ('extra_charges', models.FloatField(default=0)),
                ('ercess_fees', models.CharField(default='0', max_length=10)),
                ('processing_fee', models.CharField(default='0', max_length=10)),
                ('cart_status', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'tickets_sale_ercess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('topics_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=37)),
            ],
            options={
                'db_table': 'topics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_userid', models.TextField(blank=True, null=True)),
                ('md5', models.CharField(max_length=36)),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('user', models.CharField(max_length=40)),
                ('profile_pic', models.TextField()),
                ('gender', models.CharField(max_length=8)),
                ('location', models.CharField(max_length=25)),
                ('mobile', models.CharField(max_length=11)),
                ('password', models.CharField(blank=True, max_length=300, null=True)),
                ('mobile_verified', models.IntegerField()),
                ('status', models.CharField(max_length=8)),
                ('first_time', models.CharField(max_length=20)),
                ('organization_name', models.CharField(max_length=200)),
                ('organization_location', models.TextField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_userid', models.TextField(blank=True, null=True)),
                ('md5', models.CharField(max_length=36)),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('user', models.CharField(max_length=40)),
                ('profile_pic', models.TextField()),
                ('gender', models.CharField(max_length=8)),
                ('location', models.CharField(max_length=25)),
                ('mobile', models.CharField(max_length=11)),
                ('password', models.CharField(blank=True, max_length=300, null=True)),
                ('mobile_verified', models.IntegerField()),
                ('status', models.CharField(max_length=8)),
                ('first_time', models.CharField(max_length=20)),
                ('organization_name', models.CharField(max_length=200)),
                ('organization_location', models.TextField()),
            ],
            options={
                'db_table': 'users2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=30)),
                ('lname', models.CharField(max_length=30)),
                ('email_id', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('admin_type', models.IntegerField()),
                ('admin_active', models.IntegerField()),
                ('team', models.IntegerField()),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='ExpectationsFeedbacks',
            fields=[
                ('expectations_feedbacks_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('booking_id', models.IntegerField(default=0)),
                ('email', models.EmailField(max_length=50)),
                ('expectation_msg', models.TextField(max_length=500, null=True)),
                ('uploaded_by', models.IntegerField(default=0)),
                ('exp_email_attempts', models.IntegerField(default=0)),
                ('exp_mail_status', models.CharField(default='pending', max_length=20)),
                ('exp_timestamp', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 946436))),
                ('feedback_rating', models.IntegerField(default=0)),
                ('feedback_msg', models.TextField(max_length=500, null=True)),
                ('feedback_mail_attempts', models.IntegerField(default=0)),
                ('feedback_timestamp', models.DateTimeField(default=datetime.datetime(2019, 12, 20, 12, 31, 51, 946486))),
                ('feedback_mail_status', models.CharField(default='pending', max_length=20)),
                ('provided_for', models.CharField(default='expectation_and_feedback', max_length=50)),
            ],
            options={
                'db_table': 'expectations_feedbacks',
            },
        ),
        migrations.CreateModel(
            name='Stall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stall_name', models.CharField(max_length=254)),
                ('total_quantity', models.IntegerField()),
                ('booking_start_date', models.DateField(null=True)),
                ('booking_start_time', models.TimeField(null=True)),
                ('booking_end_date', models.DateField(null=True)),
                ('booking_end_time', models.TimeField(null=True)),
                ('full_stall_price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('half_stall_price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('number_of_chairs', models.IntegerField()),
                ('counter', models.BooleanField(default=True)),
                ('any_condition', models.TextField(max_length=300)),
                ('size_in_meters', models.CharField(max_length=255)),
                ('event_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StallFacilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_backup', models.BooleanField()),
                ('parking_space', models.BooleanField()),
                ('water_supply', models.BooleanField()),
                ('electricity', models.BooleanField()),
                ('wifi', models.BooleanField()),
                ('security', models.BooleanField()),
                ('description', models.TextField()),
                ('terms_and_condition', models.TextField()),
                ('expected_footfall', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('accepted_product', models.ManyToManyField(null=True, related_name='products', to='dashboard.CategoriesStalls')),
                ('type_of_audience', models.ManyToManyField(null=True, related_name='audiences', to='dashboard.StallAudience')),
            ],
        ),
        migrations.CreateModel(
            name='StallUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='')),
                ('file', models.FileField(upload_to='')),
                ('event_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StatusOnChannel',
            fields=[
                ('table_id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('last_updated', models.DateTimeField()),
                ('site_id', models.IntegerField()),
                ('admin_id', models.IntegerField()),
                ('link', models.CharField(max_length=350)),
                ('promotion_status', models.CharField(max_length=30)),
                ('partner_status', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='StatusPromotionTicketing',
            fields=[
                ('status_promotion_ticketing_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('unique_id', models.CharField(max_length=10)),
                ('mode', models.CharField(max_length=20)),
                ('private', models.IntegerField()),
                ('event_active', models.IntegerField()),
                ('approval', models.IntegerField()),
                ('network_share', models.IntegerField()),
                ('ticketing', models.IntegerField()),
                ('promotion', models.IntegerField()),
                ('connected_user', models.IntegerField()),
                ('complete_details', models.IntegerField(blank=True, null=True)),
                ('validation_status_sent', models.IntegerField(blank=True, null=True)),
                ('leads_package', models.IntegerField(blank=True, default=0, null=True)),
                ('step1_complete', models.IntegerField(blank=True, default=0, null=True)),
                ('step2_complete', models.IntegerField(blank=True, default=0, null=True)),
                ('step3_complete', models.IntegerField(blank=True, default=0, null=True)),
                ('step4_complete', models.IntegerField(blank=True, default=0, null=True)),
                ('step5_complete', models.IntegerField(blank=True, default=0, null=True)),
                ('step6_complete', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'status_promotion_ticketing',
            },
        ),
    ]
